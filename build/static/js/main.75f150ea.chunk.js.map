{"version":3,"sources":["Weather_App/WeatherCard.js","Weather_App/Temp.js","App.js","index.js"],"names":["WeatherCard","tempInfo","temp","pressure","humidity","weathermood","name","speed","country","sunset","date","Date","TimeStr","getHours","getMinutes","useState","weatherState","setWeatherState","useEffect","className","toLocaleString","Temp","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","console","log","sys","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75f150ea.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WeatherCard = ({ tempInfo }) => {\r\n    const { temp, pressure, humidity, weathermood, name, speed, country, sunset } = tempInfo;\r\n    let sec = sunset;\r\n    let date = new Date(sec * 1000);\r\n    let TimeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n    const [weatherState, setWeatherState] = useState('');\r\n    useEffect(() => {\r\n        if (weathermood) {\r\n            switch (weathermood) {\r\n                case \"Clouds\": setWeatherState(\"wi-day-cloudy\");\r\n                    break;\r\n                case \"Haze\": setWeatherState(\"wi-fog\");\r\n                    break;\r\n                case \"Clear\": setWeatherState(\"wi-day-sunny\");\r\n                    break;\r\n                    case \"Mist\": setWeatherState(\"wi-dust\");\r\n                    break;\r\n                    case \"Smoke\": setWeatherState(\"wi-smoke\");\r\n                    break;\r\n                default:\r\n                    setWeatherState(\"wi-day-sunny\");\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }, [weathermood]);\r\n    return (\r\n        <>\r\n            <article className=\"widget\">\r\n                <div className=\"weatherIcon\">\r\n                    <i className={`wi ${weatherState}`}></i>\r\n                </div>\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                        <span>{temp}&deg;</span>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <div className=\"weatherConition\">{weathermood}</div>\r\n                        <div className=\"place\">{name} , {country}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"date\">{new Date().toLocaleString()}</div>\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-day-sunny\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {TimeStr}:PM <br />\r\n                                Sunset\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-humidity\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {humidity} g.kg-1 <br />\r\n                                Humidity\r\n                            </p>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"weather-extra-info\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-rain\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {pressure} pascl  <br />\r\n                                Pressure\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p>\r\n                                <i className={\"wi wi-strong-wind\"}></i>\r\n                            </p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {speed} km/h<br />\r\n                                Speed\r\n                            </p>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./style2.css\";\r\nimport WeatherCard from './WeatherCard';\r\n\r\nconst Temp = () => {\r\n\r\n    const [searchValue, setSearchValue] = useState(\"Lahore\");\r\n    const [tempInfo, setTempInfo] = useState({})\r\n\r\n    const getWeatherInfo = async () => {\r\n        try {\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=f82ec031ab932538dd1bf7f5f6e9e213`;\r\n\r\n            const res = await fetch(url);\r\n\r\n\r\n            const data = await res.json();\r\n            const { temp, pressure, humidity } = data.main;\r\n            const { main: weathermood } = data.weather[0];\r\n            const { name } = data;\r\n            const { speed } = data.wind;\r\n            console.log(temp);\r\n            const { country, sunset } = data.sys;\r\n\r\n            const myWeatherInfo = { temp, pressure, humidity, weathermood, name, speed, country, sunset };\r\n            setTempInfo(myWeatherInfo);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap\">\r\n                <div className=\"search\">\r\n                    <input type=\"search\" placeholder=\"search...\" autoFocus id=\"search\" className=\"searchTerm\"\r\n                        value={searchValue} onChange={(e) => setSearchValue(e.target.value)} />\r\n                    <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>Search</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <WeatherCard  tempInfo={tempInfo}/>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Temp;\r\n","\nimport Temp from './Weather_App/Temp';\n\n\n\nfunction App() {\n  \n  return (\n    \n     \n      <Temp />\n    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\n\n\nReactDOM.render(\n  <>\n    \n    <App />\n  </>,\n\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}